cache:                                                                                                                               
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - .m2
  - .sonar/cache

stages:
  - build
  - quality

variables:
  MAVEN_USER: 'deployment'
  MAVEN_CLI_OPTS: "-DskipTests --batch-mode -Dmaven.repo.local=$CI_PROJECT_DIR/.m2"
  SONAR_HOST_URL: 'https://sonar.geomatys.com'
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  SONAR_HOST_URL: 'https://sonar.geomatys.com'
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

build-linux:
  image: images.geomatys.com/ci/maven:3-jdk-8-openjfx
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG != null
  script:
    - mvn clean install $MAVEN_CLI_OPTS -s $MAVEN_SETTINGS
    - cd launcher
    - apt update
    - apt install -yqq fakeroot rpm
    - mvn jfx:native $MAVEN_CLI_OPTS -s $MAVEN_SETTINGS
  artifacts:
    paths:
      - launcher/target/jfx/native

build-windows:
  #image:
  #  name: csanchez/maven:3.6.3--windowsservercore-1809
  #  entrypoint: [""]
  stage: build
  tags:
    - powershell
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG != null
  script:
    - cd $env:CI_PROJECT_DIR\
    - mvn clean install $MAVEN_CLI_OPTS -s $MAVEN_SETTINGS -DskipTests
    - cd launcher
    - mvn jfx:native $MAVEN_CLI_OPTS -s $MAVEN_SETTINGS -DskipTests
  artifacts:
    paths:
      - launcher/target/jfx/native

build-macosx:
  stage: build
  tags:
    - macosx
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG != null
  script:
    - mvn clean install $MAVEN_CLI_OPTS -s $MAVEN_SETTINGS
    - cd launcher
    - mvn jfx:native $MAVEN_CLI_OPTS -s $MAVEN_SETTINGS
  artifacts:
    paths:
      - launcher/target/jfx/native

quality:
  image: images.geomatys.com/ci/maven:3-jdk-8-openjfx
  stage: quality
  script:
    - mvn sonar:sonar $MAVEN_CLI_OPTS -s $MAVEN_SETTINGS
      -Dsonar.login=$SONAR_TOKEN
      -Dsonar.host.url=$SONAR_HOST_URL
      -Dsonar.java.binaries=${CI_PROJECT_DIR}/.m2
      $MAVEN_CLI_OPTS -s $SETTINGS_MAVEN
  allow_failure: true
  only:
    variables:
      - $SONAR_TOKEN

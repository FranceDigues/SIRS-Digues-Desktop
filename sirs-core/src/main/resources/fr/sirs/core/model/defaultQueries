#
# Ce fichier contient les requetes pr\u00E9programm\u00E9es.
# Par souci d'homog\u00E9n\u00E9\u00EFt\u00E9, le format a \u00E9t\u00E9 choisi identique au format de
# sauvegarde des requ\u00EAtes locales (fichier properties).
#
# @author Samuel Andr\u00E9s (Geomatys)
#
Nouveaux\ d\u00E9sordres\ ponctuels\ par\ type=select d."id", d."designation", d."date_debut", d."date_fin", d."prDebut", d."prFin", t."libelle" as "type" from "Desordre" d, "RefTypeDesordre" t where d."typeDesordreId" like t."id" and (d."positionDebut" like d."positionFin" or d."prDebut" like d."prFin" or (d."positionDebut" is not null and d."positionFin" is null)) and (d."date_fin" is null) order by d."date_debut" desc, t."libelle" asc\u00A7On consid\u00E8re la "nouveaut\u00E9" en classant les d\u00E9sordres par date de d\u00E9but d\u00E9croissante.\nOn consid\u00E8re la "ponctualit\u00E9" par l'identit\u00E9 des positions de d\u00E9but et de fin ou bien par l'identit\u00E9 des PRs de d\u00E9but et de fin, ou bien par la nullit\u00E9 de la position de fin si la position de d\u00E9but n'est pas nulle.
 
Nouveaux\ d\u00E9sordres\ lin\u00E9aires\ par\ type=select d."id", d."designation", d."date_debut", d."date_fin", d."prDebut", d."prFin", t."libelle" as "type" from "Desordre" d, "RefTypeDesordre" t where d."typeDesordreId" like t."id" and (d."positionDebut" not like d."positionFin" or d."prDebut" not like d."prFin") and (d."date_fin" is null) order by d."date_debut" desc, t."libelle" asc\u00A7On consid\u00E8re la "nouveaut\u00E9" en classant les d\u00E9sordres par date de d\u00E9but d\u00E9croissante\nOn consid\u00E8re la "lin\u00E9arit\u00E9" par la diff\u00E9rence des positions de d\u00E9but et de fin ou bien par la diff\u00E9rence des PRs de d\u00E9but et de fin.

D\u00E9sordres\ trait\u00E9s\ sur\ une\ p\u00E9riode\ par\ type=select d."id", d."designation", d."date_debut", d."date_fin", d."prDebut", d."prFin", t."libelle" as "type" from "Desordre" d, "RefTypeDesordre" t where d."typeDesordreId" like t."id" and d."date_fin">'2011-01-01' and d."date_fin"<'2012-01-01'\u00A7La p\u00E9riode de la requÃªte est l'ann\u00E9e 2011.

D\u00E9sordres\ observ\u00E9s\ par\ tron\u00E7on=select d."id", d."designation", td."libelle" from "Desordre" d, "TronconDigue" td where d."linearId" like td."id" order by td."id"\u00A7

D\u00E9nombrement\ des\ d\u00E9sordres\ par\ rive=select count(*), r."libelle" from "Desordre" d, "TronconDigue" t, "RefRive" r where d."linearId" like t."id" and t."typeRiveId" like r."id" group by r."id" order by r."libelle"\u00A7

D\u00E9sordres\ par\ rive=select d."id", d."designation", r."libelle" from "Desordre" d, "TronconDigue" t, "RefRive" r where d."linearId" like t."id" and t."typeRiveId" like r."id" order by r."libelle"\u00A7

Montant\ des\ travaux\ d'entretien\ par\ type\ de\ travail=select sum("coutGlobal") as cout, tp."libelle"  from "Prestation" p, "RefPrestation" tp  where p."typePrestationId" like tp."id" group by "typePrestationId" order by cout desc\u00A7

Montant\ des\ travaux\ d'entretien\ par\ type\ de\ travail\ par\ tron\u00E7on=select sum("coutGlobal") as cout, tp."libelle" as prestation, td."libelle" as troncon  from "Prestation" p, "RefPrestation" tp, "TronconDigue" td  where p."typePrestationId" like tp."id" and td."id" like p."linearId" group by "typePrestationId", td."id" order by cout desc\u00A7

Longueur\ cumul\u00E9e\ des\ objets\ de\ structure\ par\ type=select "concrete_table_name", sum(abs("prFin"-"prDebut")) as "lin\u00E9aire (km)" from "ObjetStructure" group by "concrete_table_name"\u00A7

Longueur\ cumul\u00E9e\ des\ objets\ de\ structure\ par\ type\ et\ par\ tron\u00E7on=select s."concrete_table_name" as "type d'\u00E9l\u00E9ment", t."libelle", t."designation", sum(abs(s."prFin"-s."prDebut")) as "lin\u00E9aire (km)" from "ObjetStructure" s, "TronconDigue" t where t."id"=s."linearId" group by s."concrete_table_name", s."linearId" order by "concrete_table_name", s."linearId"\u00A7

Conduites\ ferm\u00E9es\ avec\ informations\ de\ propri\u00E9t\u00E9=select RHF.*, TD."libelle" as tid, PO."date_debut" as "Debut de propri\u00E9t\u00E9", PO."date_fin" as "Fin de propri\u00E9t\u00E9", ORG."nom" as "Organisme", ORG."telephone" as "T\u00E9l\u00E9phone organisme", ORG."email" as "E-mail organisme", CON."nom" as "Contact", CON."telephone" as "T\u00E9l\u00E9phone particulier", CON."email" as "E-mail particulier" FROM ("ReseauHydrauliqueFerme" RHF left join "ProprieteObjet" PO ON RHF."id" \= PO."parent_id" left join "TronconDigue" TD ON TD."id" \= RHF."linearId" left join "Organisme" ORG ON ORG."id" \= PO."organismeId" left join "Contact" CON on CON."id" \= PO."contactId")\u00A7S\u00E9lection des conduites ferm\u00E9es avec les noms et coordonn\u00E9es des propri\u00E9taires (organismes ou personnes physiques) et le nom du tron\u00E7on

Desordres\ courants\ avec\ derni\u00E8re\ observation=SELECT \n-- infos sur le desordre\nd."id", d."designation", \nd."date_debut", \nd."prDebut",\nd."prFin",\ncat."abrege" as code_cat,\ncat."libelle" as nom_cat,\ntype_d."abrege" code_type,\ntype_d."libelle" as nom_type, \n-- infos sur le tron\u00E7on\ntr."designation" as code_tron\u00E7on,\ntr."libelle" as nom_tron\u00E7on,\n-- infos sur la derni\u00E8re observation\no."designation" as code_observation,\no."date" as date_observation,\nu."abrege" as code_urgence,\nu."libelle" as titre_urgence\nFROM\n(SELECT "id", "designation", "date_debut", "prDebut", "prFin", "categorieDesordreId", "typeDesordreId", "linearId" FROM "Desordre" WHERE "date_fin" IS NULL) d \n    -- infos sur les cat\u00E9gories des d\u00E9sordres\n    LEFT JOIN "RefCategorieDesordre" cat ON cat."id" \= d."categorieDesordreId" \n    -- infos sur le type des d\u00E9sordres\n    LEFT JOIN "RefTypeDesordre" type_d ON type_d."id" \= d."typeDesordreId"\n    -- Tron\u00E7ons affect\u00E9s\n    LEFT JOIN "TronconDigue" tr ON tr."id" \= d."linearId"\n    LEFT JOIN \n        -- On r\u00E9cup\u00E8re les observations pour chaque d\u00E9sordre choisi.\n        (SELECT "designation", "date", "parent_id", "urgenceId" FROM "Observation"  \n            INNER JOIN\n                -- Observations \u00E0 la date la plus r\u00E9cente pour chaque d\u00E9sordre\n                (SELECT "parent_id" as tmp_pid, MAX("date") as max_date from "Observation" GROUP BY "parent_id") o0 \n            ON "parent_id" \= o0.tmp_pid and "date" \= o0.max_date\n        ) o ON o."parent_id" \= d."id"\n    -- urgence of the returned observations\n    LEFT JOIN "RefUrgence" u ON u."id" \= o."urgenceId"\n    -- tri par date d'observation\n    ORDER BY date_observation DESC;\u00A7Tous les d\u00E9sordres non trait\u00E9s. Informations compl\u00E9mentaires \: \nTron\u00E7on associ\u00E9 et PR sur le tron\u00E7on,\nType du d\u00E9sordre,\nObservations \u00E0 la date la plus r\u00E9cente, avec degr\u00E9 d'urgence.\n\nTri\u00E9 par date d'observation (de la plus r\u00E9cente \u00E0 la plus ancienne).

Charge\ et\ hauteur\ de\ revanche\ hydraulique\ pour\ chaque\ crue\ \ =SELECT\ntr."id", tr."designation" as CODE_TRONCON,\ntr."libelle" as NOM_TRONCON,\n"prDebut" as PR_DEBUT,\n"prFin" as PR_FIN,\nNOM_PROFIL,\neh."designation" as CODE_CRUE,\neh."libelle" as NOM_CRUE,\nCOTE_CRETE,\nCOTE_PIED_TERRE,\nCOTE_EAU,\nCOTE_CRETE - COTE_PIED_TERRE as hauteur_digue_terre,\nCOTE_EAU - COTE_PIED_TERRE as charge,\nCOTE_CRETE - COTE_EAU as revanche\nFROM\n-- Tous les param\u00E8tres hydrauliques (avec les infos sur le profil en travers cible) associ\u00E9s \u00E0 une crue\n(select pt."id" as ptid, pt."libelle" as NOM_PROFIL, ph."coteEau" as COTE_EAU, ph."evenementHydrauliqueId" as crue_id from "ProfilTravers" pt inner join "ParametreHydrauliqueProfilTravers" ph on ph."parent_id" \= pt."id" and ph."evenementHydrauliqueId" is not null and ph."coteEau" > 0)\nINNER JOIN "EvenementHydraulique" eh ON eh."id" \= crue_id\n-- On prends les moyennes associ\u00E9es\nINNER JOIN \n    (\n        -- La moyenne des lev\u00E9s pour chaque position de profil\n        select posId, "linearId", "prDebut", "prFin", "sirsdocument", AVG(lppt."cotePiedDigueTerre") as COTE_PIED_TERRE, AVG(lppt."coteCrete") as COTE_CRETE from "LevePositionProfilTravers" lppt inner join \n            (select * from "LevePositionProfilTraversPositionProfilTravers" inner join (select "id" as posId, "linearId", "prDebut", "prFin", "sirsdocument" from "PositionProfilTravers") on "positionProfilTraversId" \= posId) lpptppt \n            ON lppt."id" \= lpptppt."levePositionProfilTraversId"\n        GROUP BY posId, "linearId", "prDebut", "prFin", "sirsdocument"\n    ) ml ON ml."sirsdocument" \= ptid\n-- On trouve les infos sur les tron\u00E7ons concern\u00E9s\nINNER JOIN "TronconDigue" tr ON tr."id" \= ml."linearId"\n-- Tri\u00E9 par tron\u00E7on, puis de l'amont vers l'aval.\nORDER BY tr."id", PR_DEBUT;\u00A7Sur chaque tron\u00E7on, on retrouve les profils en travers associ\u00E9s \u00E0 un \u00E9venement hydraulique.\nOn fait la moyenne des cotes de lev\u00E9 pour chaque profil, et on calcule la charge et la hauteur de revanche pour chaque \u00E9venement hydraulique li\u00E9.

#
# Ce fichier contient les requetes pr\u00e9programm\u00e9es.
#=================================================
#
# Chaque requ\u00eate est d\u00e9crite par trois proprit\u00e9s.
# 1- la propri\u00e9t\u00e9 suffix\u00e9e par ".title" indique le libell\u00e9 de la requ\u00eate
# 2- la propri\u00e9t\u00e9 suffix\u00e9e par ".description" indique la description de la requ\u00eate
# 3- la propri\u00e9t\u00e9 suffix\u00e9e par ".query" indique le corps de la requ\u00eate en SQL
#
# \u00c0 noter que :
# - l'ordre des propri\u00e9t\u00e9s importe peu
# - le nom des propri\u00e9t\u00e9 priv\u00e9 du suffixe ".title", ".description" ou ".query" sert 
# d'identifiant \u00e0 la requ\u00eate pr\u00e9programm\u00e9e ; un m\u00eame identifiant ne doit pas \u00eatre 
# utilis\u00e9 pour deux requ\u00eates distinctes
#
# Pour am\u00e9liorer la lisibilit\u00e9 des informations, on recommande d'utiliser les passages 
# \u00e0 la ligne. Ceux-ci sont de deux sortes :
# - les passages \u00e0 la ligne lors de l'affichage sont indiqu\u00e9s par le caract\u00e8re '\n'
# - les passages \u00e0 la ligne dans le pr\u00e9sent fichier pour une valeur de proprit\u00e9t\u00e9 
# sont indiqu\u00e9e par le caract\u00e8re '\' (attention, caract\u00e8re de passage \u00e0 la ligne ne 
# doit \u00eatre suivi d'aucun autre sur la ligne)
# Dans le but de favoriser la lisibilit\u00e9 on essaye dans ce fichier de faire 
# coincider les sauts de ligne \u00e0 l'affichage avec les passages \u00e0 la ligne \u00e0 
# l'int\u00e9rieur des valeurs des properties.
#
# Les commentaires des fichiers .properties sont les lignes commen\u00e7ant par un '#'.
# Les commentaires SQL sont indiqu\u00e9e dans les valeurs repr\u00e9sentant une expression 
# SQL, comme les sections de lignes pr\u00e9c\u00e9d\u00e9es des caract\u00e8res "--".
#
# @author Samuel Andr\u00e9s (Geomatys)
#
#
newPonctualDisordersByType.title=Nouveaux d\u00e9sordres ponctuels par type
newPonctualDisordersByType.description=\
On consid\u00e8re la "nouveaut\u00e9" en classant les d\u00e9sordres par date de d\u00e9but d\u00e9croissante. \n\
On consid\u00e8re la "ponctualit\u00e9" par l'identit\u00e9 des positions de d\u00e9but et de fin \n\
ou bien par l'identit\u00e9 des PRs de d\u00e9but et de fin, ou bien par la nullit\u00e9 \n\
de la position de fin si la position de d\u00e9but n'est pas nulle.
newPonctualDisordersByType.query=\
select d."id", d."designation", d."date_debut", d."date_fin", d."prDebut", d."prFin", t."libelle" as "type" \n\
from "Desordre" d, "RefTypeDesordre" t \n\
where d."typeDesordreId" like t."id" \n\
    and (d."positionDebut" like d."positionFin" or d."prDebut" like d."prFin" or (d."positionDebut" is not null and d."positionFin" is null)) \n\
    and (d."date_fin" is null) \n\
order by d."date_debut" desc, t."libelle" asc
#
newLinearDisordersByType.title=Nouveaux d\u00e9sordres lin\u00e9aires par type
newLinearDisordersByType.description=\
On consid\u00e8re la "nouveaut\u00e9" en classant les d\u00e9sordres par date de d\u00e9but d\u00e9croissante \n\
On consid\u00e8re la "lin\u00e9arit\u00e9" par la diff\u00e9rence des positions de d\u00e9but et de fin \n\
ou bien par la diff\u00e9rence des PRs de d\u00e9but et de fin.
newLinearDisordersByType.query=\
select d."id", d."designation", d."date_debut", d."date_fin", d."prDebut", d."prFin", t."libelle" as "type" \n\
from "Desordre" d, "RefTypeDesordre" t \n\
where d."typeDesordreId" like t."id" \n\
    and (d."positionDebut" not like d."positionFin" or d."prDebut" not like d."prFin") \n\
    and (d."date_fin" is null) \n\
order by d."date_debut" desc, t."libelle" asc
#
processedDisordersByType.title=D\u00e9sordres trait\u00e9s sur une p\u00e9riode par type
processedDisordersByType.description=La p\u00e9riode de la requ\u00eate est l'ann\u00e9e 2011.
processedDisordersByType.query=\
select d."id", d."designation", d."date_debut", d."date_fin", d."prDebut", d."prFin", t."libelle" as "type" \n\
from "Desordre" d, "RefTypeDesordre" t \n\
where d."typeDesordreId" like t."id" and d."date_fin">'2011-01-01' and d."date_fin"<'2012-01-01'
#
observerdDisordersBySection.title=D\u00e9sordres observ\u00e9s par tron\u00e7on
observerdDisordersBySection.description=
observerdDisordersBySection.query=\
select d."id", d."designation", td."libelle" \n\
from "Desordre" d, "TronconDigue" td \n\
where d."linearId" like td."id" \n\
order by td."id"
#
countDisordersByBank.title=D\u00e9nombrement des d\u00e9sordres par rive
countDisordersByBank.description=
countDisordersByBank.query=\
select count(*), r."libelle" \n\
from "Desordre" d, "TronconDigue" t, "RefRive" r \n\
where d."linearId" like t."id" and t."typeRiveId" like r."id" \n\
group by r."id" \n\
order by r."libelle"
#
disordersByBank.title=D\u00e9sordres par rive
disordersByBank.description=
disordersByBank.query=\
select d."id", d."designation", r."libelle" \n\
from "Desordre" d, "TronconDigue" t, "RefRive" r \n\
where d."linearId" like t."id" and t."typeRiveId" like r."id" \n\
order by r."libelle"
#
costOfMaintenanceWorkByType.title=Montant des travaux d'entretien par type de travail
costOfMaintenanceWorkByType.description=
costOfMaintenanceWorkByType.query=\
select sum("coutGlobal") as cout, tp."libelle" \n\
from "Prestation" p, "RefPrestation" tp \n\
where p."typePrestationId" like tp."id" \n\
group by "typePrestationId" \n\
order by cout desc
#
costOfMaintenanceWorkByTypeBySection.title=Montant des travaux d'entretien par type de travail par tron\u00e7on
costOfMaintenanceWorkByTypeBySection.description=
costOfMaintenanceWorkByTypeBySection.query=\
select sum("coutGlobal") as cout, tp."libelle" as prestation, td."libelle" as troncon  \n\
from "Prestation" p, "RefPrestation" tp, "TronconDigue" td \n\
where p."typePrestationId" like tp."id" and td."id" like p."linearId" \n\
group by "typePrestationId", td."id" \n\
order by cout desc
#
objectLengthByType.title=Longueur cumul\u00e9e des objets de structure par type
objectLengthByType.description=
objectLengthByType.query=\
select "concrete_table_name", sum(abs("prFin"-"prDebut")) as "lin\u00e9aire (km)" \n\
from "ObjetStructure" \n\
group by "concrete_table_name"
#
objectLengthBySectionByType.title=Longueur cumul\u00e9e des objets de structure par type et par tron\u00e7on
objectLengthBySectionByType.description=
objectLengthBySectionByType.query=\
select s."concrete_table_name" as "type d'\u00e9l\u00e9ment", t."libelle", t."designation", sum(abs(s."prFin"-s."prDebut")) as "lin\u00e9aire (km)" \n\
from "ObjetStructure" s, "TronconDigue" t \n\
where t."id"=s."linearId" \n\
group by s."concrete_table_name", s."linearId" \n\
order by "concrete_table_name", s."linearId"
#
rhfAndProperty.title=Conduites ferm\u00e9es avec informations de propri\u00e9t\u00e9
rhfAndProperty.description=\
S\u00e9lection des conduites ferm\u00e9es avec les noms et coordonn\u00e9es des propri\u00e9taires \n\
(organismes ou personnes physiques) et le nom du tron\u00e7on.
rhfAndProperty.query=\
select RHF.*, TD."libelle" as tid, \n\
PO."date_debut" as "Debut de propri\u00e9t\u00e9", PO."date_fin" as "Fin de propri\u00e9t\u00e9", \n\
ORG."nom" as "Organisme", ORG."telephone" as "T\u00e9l\u00e9phone organisme", \n\
ORG."email" as "E-mail organisme", CON."nom" as "Contact", \n\
CON."telephone" as "T\u00e9l\u00e9phone particulier", CON."email" as "E-mail particulier" \n\
FROM ("ReseauHydrauliqueFerme" RHF \n\
left join "ProprieteObjet" PO ON RHF."id" \= PO."parent_id" \n\
left join "TronconDigue" TD ON TD."id" \= RHF."linearId" \n\
left join "Organisme" ORG ON ORG."id" \= PO."organismeId" \n\
left join "Contact" CON on CON."id" \= PO."contactId")
#
currentDisordersAndLastObservation.title=Desordres courants avec derni\u00e8re observation
currentDisordersAndLastObservation.description=\
Tous les d\u00e9sordres non trait\u00e9s. Informations compl\u00e9mentaires : \n\
Tron\u00e7on associ\u00e9 et PR sur le tron\u00e7on,\n\
Type du d\u00e9sordre,\n\
Observations \u00e0 la date la plus r\u00e9cente, avec degr\u00e9 d'urgence.\n\n\
Tri\u00e9 par date d'observation (de la plus r\u00e9cente \u00e0 la plus ancienne).
currentDisordersAndLastObservation.query=\
SELECT \n\
-- infos sur le desordre\nd."id", d."designation", \n\
d."date_debut", \n\
d."prDebut",\n\
d."prFin",\n\
cat."abrege" as code_cat,\n\
cat."libelle" as nom_cat,\n\
type_d."abrege" code_type,\n\
type_d."libelle" as nom_type, \n\
-- infos sur le tron\u00e7on\n\
tr."designation" as code_tron\u00e7on,\n\
tr."libelle" as nom_tron\u00e7on,\n\
-- infos sur la derni\u00e8re observation\n\
o."designation" as code_observation,\n\
o."date" as date_observation,\n\
u."abrege" as code_urgence,\n\
u."libelle" as titre_urgence\n\
FROM\n\
(SELECT "id", "designation", "date_debut", "prDebut", "prFin", "categorieDesordreId", "typeDesordreId", "linearId" \n\
    FROM "Desordre" \n\
    WHERE "date_fin" IS NULL) d \n\
    -- infos sur les cat\u00e9gories des d\u00e9sordres\n\
LEFT JOIN "RefCategorieDesordre" cat ON cat."id" = d."categorieDesordreId" \n\
 -- infos sur le type des d\u00e9sordres\n\
LEFT JOIN "RefTypeDesordre" type_d ON type_d."id" = d."typeDesordreId"\n\
-- Tron\u00e7ons affect\u00e9s\n\
LEFT JOIN "TronconDigue" tr ON tr."id" = d."linearId"\n\
LEFT JOIN \n\
-- On r\u00e9cup\u00e8re les observations pour chaque d\u00e9sordre choisi.\n\
    (SELECT "designation", "date", "parent_id", "urgenceId" \n\
        FROM "Observation"  \n\
            INNER JOIN\n\
                -- Observations \u00e0 la date la plus r\u00e9cente pour chaque d\u00e9sordre\n\
                (SELECT "parent_id" as tmp_pid, MAX("date") as max_date from "Observation" GROUP BY "parent_id") o0 \n\
            ON "parent_id" = o0.tmp_pid and "date" = o0.max_date\n\
        ) o ON o."parent_id" = d."id"\n\
-- urgence of the returned observations\n\
LEFT JOIN "RefUrgence" u ON u."id" = o."urgenceId"\n\
-- tri par date d'observation\n\
ORDER BY date_observation DESC;
#
chargeAndHeightForFlood.title=Charge et hauteur de revanche hydraulique pour chaque crue
chargeAndHeightForFlood.description=\
Sur chaque tron\u00e7on, on retrouve les profils en travers associ\u00e9s \u00e0 un \u00e9venement hydraulique. \n\
On fait la moyenne des cotes de lev\u00e9 pour chaque profil, et on calcule la charge \n\
et la hauteur de revanche pour chaque \u00e9venement hydraulique li\u00e9.
chargeAndHeightForFlood.query=\
SELECT \n\
tr."id", tr."designation" as CODE_TRONCON, \n\
tr."libelle" as NOM_TRONCON, \n\
"prDebut" as PR_DEBUT, \n\
"prFin" as PR_FIN, \n\
NOM_PROFIL, \n\
eh."designation" as CODE_CRUE, \n\
eh."libelle" as NOM_CRUE, \n\
COTE_CRETE, \n\
COTE_PIED_TERRE, \n\
COTE_EAU, \n\
COTE_CRETE - COTE_PIED_TERRE as hauteur_digue_terre, \n\
COTE_EAU - COTE_PIED_TERRE as charge, \n\
COTE_CRETE - COTE_EAU as revanche \n\
FROM \n\
    -- Tous les param\u00e8tres hydrauliques (avec les infos sur le profil en travers cible) associ\u00e9s \u00e0 une crue \n\
    (select pt."id" as ptid, pt."libelle" as NOM_PROFIL, ph."coteEau" as COTE_EAU, ph."evenementHydrauliqueId" as crue_id \n\
    from "ProfilTravers" pt \n\
    inner join "ParametreHydrauliqueProfilTravers" ph on ph."parent_id" = pt."id" and ph."evenementHydrauliqueId" is not null and ph."coteEau" > 0) \n\
INNER JOIN "EvenementHydraulique" eh ON eh."id" = crue_id \n\
-- On prend les moyennes associ\u00e9es \n\
INNER JOIN \n\
    (\n\
        -- La moyenne des lev\u00e9s pour chaque position de profil \n\
        select posId, "linearId", "prDebut", "prFin", "sirsdocument", AVG(lppt."cotePiedDigueTerre") as COTE_PIED_TERRE, AVG(lppt."coteCrete") as COTE_CRETE \n\
        from "LevePositionProfilTravers" lppt \n\
        inner join \n\
            (select * from "LevePositionProfilTraversPositionProfilTravers" \n\
                inner join (select "id" as posId, "linearId", "prDebut", "prFin", "sirsdocument" from "PositionProfilTravers") on "positionProfilTraversId" = posId) lpptppt \n\
            ON lppt."id" = lpptppt."levePositionProfilTraversId"\n\
        GROUP BY posId, "linearId", "prDebut", "prFin", "sirsdocument"\n\
    ) ml ON ml."sirsdocument" = ptid\n\
-- On trouve les infos sur les tron\u00e7ons concern\u00e9s\n\
INNER JOIN "TronconDigue" tr ON tr."id" = ml."linearId"\n\
-- Tri\u00e9 par tron\u00e7on, puis de l'amont vers l'aval.\n\
ORDER BY tr."id", PR_DEBUT;
#
# ==============================================================================
# Section des requ\u00eates impl\u00e9ment\u00e9es dans le cadre de la demande REDMINE#6034
# ==============================================================================
#
# requ\u00eate 1
disorders.title=Tableau de d\u00e9sordres
disorders.description=\
R\u00e9capitulatif des d\u00e9sordres sans date de fin, avec leur tron\u00e7on et la classe du \n\
syst\u00e8me d'endiguement, leur position, l'abr\u00e9g\u00e9 de l'urgence de la derni\u00e8re \n\
observation et leurs c\u00f4t\u00e9, type de position et type. \n\n\
Pour s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, un type de d\u00e9sordre, \n\
une classe de digue ou une date de fin, modifier les valeurs indiqu\u00e9es dans la \n\
clause WHERE en cons\u00e9quence.
disorders.query=\
SELECT \n\
-- infos sur le desordre \n\
tr."designation" as numero_troncon, \n\
d."designation",  \n\
bd."libelle" as borne_debut, \n\
d."borne_debut_aval", \n\
d."borne_debut_distance", \n\
st_asText(d."positionDebut") as position_debut, \n\
bf."libelle" as borne_fin, \n\
d."borne_fin_aval", \n\
d."borne_fin_distance", \n\
st_asText(d."positionFin") as position_fin, \n\
u."abrege" as code_urgence, \n\
cot."libelle" as cot\u00e9, \n\
pos."libelle" as position, \n\
type_d."libelle" as type, \n\
se."classement" as classe_digue \n\
FROM \n\
    "Desordre" d  \n\
    -- infos sur le type des d\u00e9sordres \n\
    LEFT JOIN "RefTypeDesordre" type_d ON type_d."id" = d."typeDesordreId" \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = d."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "BorneDigue" bd ON bd."id" = d."borneDebutId" \n\
    LEFT JOIN "BorneDigue" bf ON bf."id" = d."borneFinId" \n\
    LEFT JOIN "RefCote" cot ON cot."id" = d."coteId" \n\
    LEFT JOIN "RefPosition" pos ON pos."id" = d."positionId" \n\
    LEFT JOIN  \n\
        -- On r\u00e9cup\u00e8re les observations pour chaque d\u00e9sordre choisi. \n\
        (SELECT "parent_id", "urgenceId" FROM "Observation" \n\
            INNER JOIN \n\
                -- Observations \u00e0 la date la plus r\u00e9cente pour chaque d\u00e9sordre \n\
                (SELECT "parent_id" as tmp_pid, MAX("date") as max_date from "Observation" GROUP BY "parent_id") o0 \n\
            ON "parent_id" = o0.tmp_pid and "date" = o0.max_date \n\
        ) o ON o."parent_id" = d."id" \n\
    -- urgence of the returned observations \n\
    LEFT JOIN "RefUrgence" u ON u."id" = o."urgenceId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple param\u00e9trage du type de d\u00e9sordre \u00e0 partir de la d\u00e9signation \n\
    -- (type_d."designation" like 'uneDesignation' or type_d."designation" like 'uneAutreDesignation') \n\
    AND (type_d."designation" IS NOT NULL OR type_d."designation" IS NULL) \n\
    -- exemple param\u00e9trage de la classe du syst\u00e8me d'endiguement \n\
    -- (se."classement" like 'A' or se."classement" like 'B') \n\
    AND (se."classement" IS NOT NULL OR se."classement" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- d."date_fin" <= '2010-01-01' \n\
    AND d."date_fin" IS NULL;
#
# requ\u00eate 2
closed.hydrolic.networks.title=Ouvrage r\u00e9seau hydraulique ferm\u00e9
closed.hydrolic.networks.description=\
R\u00e9capitulatif des r\u00e9seaux hydrauliques ferm\u00e9s sans date de fin avec leur tron\u00e7on \n\
et la classe du syst\u00e8me d'endiguement, leur position, l'abr\u00e9g\u00e9 de l'urgence de \n\
la derni\u00e8re observation, et leurs c\u00f4t\u00e9, type de position, libell\u00e9 et diam\u00e8tre \n\
ainsi que l'\u00e9volution et la suite de la derni\u00e8re observation et type. \n\n\
Pour s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, une classe de digue ou \n\
une date de fin, modifier les valeurs indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
closed.hydrolic.networks.query=\
SELECT \n\
-- infos sur le r\u00e9seau hydraulique ferm\u00e9 \n\
tr."designation" as numero_troncon, \n\
rhf."designation", \n\
bd."libelle" as borne_debut, \n\
rhf."borne_debut_aval", \n\
rhf."borne_debut_distance", \n\
rhf.st_asText("positionDebut") as position_debut, \n\
bf."libelle" as borne_fin, \n\
rhf."borne_fin_aval", \n\
rhf."borne_fin_distance", \n\
rhf.st_asText("positionFin") as position_fin, \n\
rhf."libelle", \n\
cot."libelle" as cot\u00e9, \n\
pos."libelle" as position, \n\
rhf."diametre", \n\
se."classement" as classe_digue, \n\
o."evolution", \n\
o."suite" \n\
FROM \n\
    "ReseauHydrauliqueFerme" rhf \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = rhf."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "BorneDigue" bd ON bd."id" = rhf."borneDebutId" \n\
    LEFT JOIN "BorneDigue" bf ON bf."id" = rhf."borneFinId" \n\
    LEFT JOIN "RefCote" cot ON cot."id" = rhf."coteId" \n\
    LEFT JOIN "RefPosition" pos ON pos."id" = rhf."positionId" \n\
    LEFT JOIN  \n\
        -- On r\u00e9cup\u00e8re les observations pour chaque rhf choisi. \n\
        (SELECT "parent_id", "evolution", "suite" FROM "ObservationReseauHydrauliqueFerme" \n\
            INNER JOIN \n\
                -- Observations \u00e0 la date la plus r\u00e9cente pour chaque rhf \n\
                (SELECT "parent_id" as tmp_pid, MAX("date") as max_date from "ObservationReseauHydrauliqueFerme" GROUP BY "parent_id") o0 \n\
            ON "parent_id" = o0.tmp_pid and "date" = o0.max_date \n\
        ) o ON o."parent_id" = rhf."id" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple param\u00e9trage de la classe du syst\u00e8me d'endiguement \n\
    -- (se."classement" like 'A' or se."classement" like 'B') \n\
    AND (se."classement" IS NOT NULL or se."classement" is null) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- rhf."date_fin" <= '2010-01-01' \n\
    AND rhf."date_fin" IS NULL;
#
# requ\u00eate 3
newDisorders.title=Tableau des nouveaux d\u00e9sordres
newDisorders.description=\
R\u00e9capitulatif des nouveaux d\u00e9sordres sans date de fin, avec leur tron\u00e7on et la \n\
classe du syst\u00e8me d'endiguement, leur position, leur type et l'abr\u00e9g\u00e9 de \n\
l'urgence et la date de la derni\u00e8re observation. \n\n\
Pour s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, un type de d\u00e9sordre, \n\
une classe de digue, une p\u00e9riode temporelle sur la date de la derni\u00e8re observation \n\
ou une date de fin, modifier les valeurs indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
newDisorders.query=\
SELECT \n\
-- infos sur le desordre \n\
tr."designation" as numero_troncon, \n\
d."designation", \n\
o."date" as date_observation, \n\
u."abrege" as code_urgence, \n\
type_d."libelle" as type, \n\
cot."libelle" as cot\u00e9, \n\
pos."libelle" as position, \n\
bd."libelle" as borne_debut, \n\
d."borne_debut_aval", \n\
d."borne_debut_distance", \n\
st_asText(d."positionDebut") as position_debut, \n\
bf."libelle" as borne_fin, \n\
d."borne_fin_aval", \n\
d."borne_fin_distance", \n\
st_asText(d."positionFin") as position_fin, \n\
se."classement" as classe_digue \n\
FROM \n\
    "Desordre" d \n\
    -- infos sur le type des d\u00e9sordres \n\
    LEFT JOIN "RefTypeDesordre" type_d ON type_d."id" = d."typeDesordreId" \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = d."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "BorneDigue" bd ON bd."id" = d."borneDebutId" \n\
    LEFT JOIN "BorneDigue" bf ON bf."id" = d."borneFinId" \n\
    LEFT JOIN "RefCote" cot ON cot."id" = d."coteId" \n\
    LEFT JOIN "RefPosition" pos ON pos."id" = d."positionId" \n\
    LEFT JOIN  \n\
        -- On r\u00e9cup\u00e8re les observations pour chaque d\u00e9sordre choisi. \n\
        (SELECT "parent_id", "urgenceId", "date" FROM "Observation" \n\
            INNER JOIN \n\
                -- Observations \u00e0 la date la plus r\u00e9cente pour chaque d\u00e9sordre \n\
                (SELECT "parent_id" as tmp_pid, MAX("date") as max_date from "Observation" GROUP BY "parent_id") o0 \n\
            ON "parent_id" = o0.tmp_pid and "date" = o0.max_date \n\
        ) o ON o."parent_id" = d."id" \n\
    -- urgence of the returned observations \n\
    LEFT JOIN "RefUrgence" u ON u."id" = o."urgenceId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple param\u00e9trage du type de d\u00e9sordre \u00e0 partir de la d\u00e9signation \n\
    -- (type_d."designation" like 'uneDesignation' or type_d."designation" like 'uneAutreDesignation') \n\
    AND (type_d."designation" IS NOT NULL OR type_d."designation" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de la derni\u00e8re observation : \n\
    -- o."date" <= '2010-01-01' \n\
    AND (o."date" IS NOT NULL OR o."date" IS NULL) \n\
    -- exemple param\u00e9trage de la classe du syst\u00e8me d'endiguement \n\
    -- (se."classement" like 'A' or se."classement" like 'B') \n\
    AND (se."classement" IS NOT NULL OR se."classement" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- d."date_fin" <= '2010-01-01' \n\
    AND d."date_fin" IS NULL;
#
# requ\u00eate 4
currentDisorders.title=D\u00e9sordres existants
currentDisorders.description=\
R\u00e9capitulatif des d\u00e9sordres existants (sans date de fin) avec leur tron\u00e7on et \n\
la classe du syst\u00e8me d'endiguement, leur position, leur type, la date de la \n\
premi\u00e8re observation, ainsi que l'abr\u00e9g\u00e9 de l'urgence et la date de la derni\u00e8re \n\
observation. \n\n\
Pour poser des conditions sur les dates de premi\u00e8re et de derni\u00e8re observation ou \n\
s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, un type de d\u00e9sordre, une classe \n\
de digue ou une date de fin, modifier les valeurs indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
currentDisorders.query=\
SELECT \n\
-- infos sur le desordre \n\
tr."designation" as numero_troncon, \n\
d."designation", \n\
fo."date" as date_premiere_observation, \n\
lo."date" as date_derniere_observation, \n\
u."abrege" as code_urgence, \n\
lo."evolution", \n\
type_d."libelle" as type, \n\
cot."libelle" as cot\u00e9, \n\
pos."libelle" as position, \n\
bd."libelle" as borne_debut, \n\
d."borne_debut_aval", \n\
d."borne_debut_distance", \n\
st_asText(d."positionDebut") as position_debut, \n\
bf."libelle" as borne_fin, \n\
d."borne_fin_aval", \n\
d."borne_fin_distance", \n\
st_asText(d."positionFin") as position_fin, \n\
se."classement" as classe_digue \n\
FROM \n\
    "Desordre" d \n\
    -- infos sur le type des d\u00e9sordres \n\
    LEFT JOIN "RefTypeDesordre" type_d ON type_d."id" = d."typeDesordreId" \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = d."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "BorneDigue" bd ON bd."id" = d."borneDebutId" \n\
    LEFT JOIN "BorneDigue" bf ON bf."id" = d."borneFinId" \n\
    LEFT JOIN "RefCote" cot ON cot."id" = d."coteId" \n\
    LEFT JOIN "RefPosition" pos ON pos."id" = d."positionId" \n\
    LEFT JOIN  \n\
        -- On r\u00e9cup\u00e8re les informations de la derni\u00e8re observation pour chaque d\u00e9sordre choisi. \n\
        (SELECT "parent_id", "urgenceId", "evolution", "date" FROM "Observation" \n\
            INNER JOIN \n\
                -- Observations \u00e0 la date la plus r\u00e9cente pour chaque d\u00e9sordre \n\
                (SELECT "parent_id" as tmp_pid, MAX("date") as max_date from "Observation" GROUP BY "parent_id") o0 \n\
            ON "parent_id" = o0.tmp_pid and "date" = o0.max_date \n\
        ) lo ON lo."parent_id" = d."id" \n\
    LEFT JOIN \n\
        -- On r\u00e9cup\u00e8re les informations de la premi\u00e8re observation pour chaque d\u00e9sordre choisi. \n\
        (SELECT "parent_id", "date" FROM "Observation" \n\
            INNER JOIN \n\
                -- Observations \u00e0 la date la plus ancienne pour chaque d\u00e9sordre \n\
                (SELECT "parent_id" as tmp_pid, MIN("date") as min_date from "Observation" GROUP BY "parent_id") o0 \n\
            ON "parent_id" = o0.tmp_pid and "date" = o0.min_date \n\
        ) fo ON fo."parent_id" = d."id" \n\
    -- urgence of the returned observations \n\
    LEFT JOIN "RefUrgence" u ON u."id" = lo."urgenceId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple param\u00e9trage du type de d\u00e9sordre \u00e0 partir de la d\u00e9signation \n\
    -- (type_d."designation" like 'uneDesignation' or type_d."designation" like 'uneAutreDesignation') \n\
    AND (type_d."designation" IS NOT NULL OR type_d."designation" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de la derni\u00e8re observation : \n\
    -- lo."date" <= '2010-01-01' \n\
    AND (lo."date" IS NOT NULL OR lo."date" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de la premi\u00e8re observation : \n\
    -- fo."date" <= '2010-01-01' \n\
    AND (fo."date" IS NOT NULL OR fo."date" IS NULL) \n\
    -- exemple param\u00e9trage de la classe du syst\u00e8me d'endiguement \n\
    -- (se."classement" like 'A' or se."classement" like 'B') \n\
    AND (se."classement" IS NOT NULL OR se."classement" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- d."date_fin" <= '2010-01-01' \n\
    AND d."date_fin" IS NULL;
#
# requ\u00eate 5
processedDisorders.title=D\u00e9sordres trait\u00e9s
processedDisorders.description=\
R\u00e9capitulatif des d\u00e9sordres tra\u00eet\u00e9s (c'est \u00e0 dire avec une date de fin) avec \n\
leur tron\u00e7on et la classe du syst\u00e8me d'endiguement, leur position, leur type, \n\
la date de la premi\u00e8re observation, ainsi que l'abr\u00e9g\u00e9 de l'urgence de la \n\
derni\u00e8re observation. Ces informations sont indiqu\u00e9es pour chaque prestation \n\
associ\u00e9e au d\u00e9sordre avec l'intitul\u00e9 du type et la date de fin des travaux. \n\n\
Pour poser des conditions sur les dates de premi\u00e8re et de derni\u00e8re observation ou \n\
s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, un type de d\u00e9sordre, \n\
une classe de digue ou une date de fin, modifier les valeurs indiqu\u00e9es dans \n\
la clause WHERE en cons\u00e9quence.
processedDisorders.query=\
SELECT \n\
-- infos sur le desordre \n\
tr."designation" as numero_troncon, \n\
d."designation", \n\
fo."date" as date_premiere_observation, \n\
d."date_fin" as date_fin, \n\
u."abrege" as code_urgence, \n\
type_d."libelle" as type, \n\
cot."libelle" as cot\u00e9, \n\
pos."libelle" as position, \n\
bd."libelle" as borne_debut, \n\
d."borne_debut_aval", \n\
d."borne_debut_distance", \n\
st_asText(d."positionDebut") as position_debut, \n\
bf."libelle" as borne_fin, \n\
d."borne_fin_aval", \n\
d."borne_fin_distance", \n\
st_asText(d."positionFin") as position_fin, \n\
tp."libelle" as travaux_realises, \n\
p."date_debut" as date_travaux, \n\
se."classement" as classe_digue \n\
FROM \n\
    "Desordre" d \n\
    -- infos sur le type des d\u00e9sordres \n\
    LEFT JOIN "RefTypeDesordre" type_d ON type_d."id" = d."typeDesordreId" \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = d."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "BorneDigue" bd ON bd."id" = d."borneDebutId" \n\
    LEFT JOIN "BorneDigue" bf ON bf."id" = d."borneFinId" \n\
    LEFT JOIN "RefCote" cot ON cot."id" = d."coteId" \n\
    LEFT JOIN "RefPosition" pos ON pos."id" = d."positionId" \n\
    LEFT JOIN \n\
        -- On r\u00e9cup\u00e8re les informations de la derni\u00e8re observation pour chaque d\u00e9sordre choisi. \n\
        (SELECT "parent_id", "urgenceId", "date" FROM "Observation" \n\
            INNER JOIN \n\
                -- Observations \u00e0 la date la plus r\u00e9cente pour chaque d\u00e9sordre \n\
                (SELECT "parent_id" as tmp_pid, MAX("date") as max_date from "Observation" GROUP BY "parent_id") o0 \n\
            ON "parent_id" = o0.tmp_pid and "date" = o0.max_date \n\
        ) lo ON lo."parent_id" = d."id" \n\
    LEFT JOIN \n\
        -- On r\u00e9cup\u00e8re les informations de la premi\u00e8re observation pour chaque d\u00e9sordre choisi. \n\
        (SELECT "parent_id", "date" FROM "Observation" \n\
            INNER JOIN \n\
                -- Observations \u00e0 la date la plus ancienne pour chaque d\u00e9sordre \n\
                (SELECT "parent_id" as tmp_pid, MIN("date") as min_date from "Observation" GROUP BY "parent_id") o0 \n\
            ON "parent_id" = o0.tmp_pid and "date" = o0.min_date \n\
        ) fo ON fo."parent_id" = d."id" \n\
    -- urgence of the returned observations \n\
    LEFT JOIN "RefUrgence" u ON u."id" = lo."urgenceId" \n\
    LEFT JOIN "DesordrePrestation" dp on dp."desordreId" = d."id" \n\
    left join "Prestation" p on p."id" = dp."prestationId" \n\
    left join "RefPrestation" tp on tp."id" = p."typePrestationId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple param\u00e9trage du type de d\u00e9sordre \u00e0 partir de la d\u00e9signation \n\
    -- (type_d."designation" like 'uneDesignation' or type_d."designation" like 'uneAutreDesignation') \n\
    AND (type_d."designation" IS NOT NULL OR type_d."designation" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de la derni\u00e8re observation \n\
    -- lo."date" <= '2010-01-01' \n\
    AND (lo."date" IS NOT NULL OR lo."date" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de la premi\u00e8re observation \n\
    -- fo."date" <= '2010-01-01' \n\
    AND (fo."date" IS NOT NULL OR fo."date" IS NULL) \n\
    -- exemple param\u00e9trage de la classe du syst\u00e8me d'endiguement \n\
    -- (se."classement" like 'A' or se."classement" like 'B') \n\
    AND (se."classement" IS NOT NULL OR se."classement" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- d."date_fin" <= '2010-01-01' \n\
    AND d."date_fin" IS NOT NULL;
#
# requ\u00eate 6
processedPrestations.title=Prestations r\u00e9alis\u00e9es
processedPrestations.description=\
R\u00e9capitulatif des prestations r\u00e9alis\u00e9es avec leur tron\u00e7on et la classe du \n\
syst\u00e8me d'endiguement, leur position, leur type, le march\u00e9 associ\u00e9 et les noms \n\
des intervenants. Ces informations sont indiqu\u00e9es pour chaque prestation \n\
associ\u00e9e au d\u00e9sordre avec l'intitul\u00e9 du type et la date de fin des travaux. \n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
un type de d\u00e9sordre, une classe de digue ou une date, modifier les valeurs \n\
indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
processedPrestations.query=\
SELECT \n\
-- infos sur la prestation \n\
tr."designation" as numero_troncon, \n\
p."libelle", \n\
p."commentaire", \n\
p."date_debut", \n\
p."date_fin", \n\
cot."libelle" as cot\u00e9, \n\
pos."libelle" as position, \n\
bd."libelle" as borne_debut, \n\
p."borne_debut_aval", \n\
p."borne_debut_distance", \n\
st_asText(p."positionDebut") as position_debut, \n\
bf."libelle" as borne_fin, \n\
p."borne_fin_aval", \n\
p."borne_fin_distance", \n\
st_asText(p."positionFin") as position_fin, \n\
group_concat(c."nom" separator ' ,') as noms_intervenants, \n\
m."libelle" as marche, \n\
se."classement" as classe_digue \n\
FROM \n\
    "Prestation" p \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = p."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "BorneDigue" bd ON bd."id" = p."borneDebutId" \n\
    LEFT JOIN "BorneDigue" bf ON bf."id" = p."borneFinId" \n\
    LEFT JOIN "RefCote" cot ON cot."id" = p."coteId" \n\
    LEFT JOIN "RefPosition" pos ON pos."id" = p."positionId" \n\
    left join "Marche" m on p."marcheId" = m."id" \n\
    left join "ContactPrestation" cp on cp."prestationId" = p."id" \n\
    left join "Contact" c on c."id" = cp."contactId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple param\u00e9trage de la classe du syst\u00e8me d'endiguement \n\
    -- (se."classement" like 'A' or se."classement" like 'B') \n\
    AND (se."classement" IS NOT NULL OR se."classement" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- p."date_fin" <= '2010-01-01' \n\
    AND (p."date_fin" IS NOT NULL or p."date_fin" is null) \n\
    -- exemple de param\u00e9trage de la date de d\u00e9but \n\
    -- p."date_debut" <= '2010-01-01' \n\
    and (p."date_debut" is not null or p."date_debut" is null) \n\
    group by tr."designation", p."libelle", p."commentaire", p."date_debut", p."date_fin", cot."libelle", pos."libelle", \n\
    bd."libelle", p."borne_debut_aval", p."borne_debut_distance", p."positionDebut", \n\
    bf."libelle", p."borne_fin_aval", p."borne_fin_distance", p."positionFin", \n\
    m."libelle", se."classement";
#
# requ\u00eate 7
ridgeStructure.title=Requ\u00eate structure cr\u00eate
ridgeStructure.description=\
Informations sur les structures de cr\u00eate sans date de fin.\n\
D\u00e9signation et libell\u00e9 du tron\u00e7on de digue (avec la classe du syst\u00e8me \n\
d'endiguement) et pr de d\u00e9but et de fin de la cr\u00eate.\n\
Inclut \u00e9galement les informations sur la nature, le mat\u00e9riau, la date de d\u00e9but, \n\
le nombre de couches et le commentaire de la cr\u00eate. \n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
les valeurs des PRs de d\u00e9but et de fin ou la date de fin, modifier les valeurs \n\
indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
ridgeStructure.query=\
SELECT \n\
-- infos sur la cr\u00eate \n\
tr."designation" as numero_troncon, \n\
tr."libelle" as nom_troncon, \n\
c."prDebut", \n\
c."prFin", \n\
n."libelle" as nature, \n\
m."libelle" as materiau, \n\
c."date_debut", \n\
c."numCouche", \n\
c."commentaire", \n\
se."classement" as classe_digue \n\
FROM \n\
    "Crete" c \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = c."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "RefNature" n ON n."id" = c."natureId" \n\
    LEFT JOIN "RefMateriau" m ON m."id" = c."materiauId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (c."prDebut">15000) \n\
    AND (c."prDebut" IS NOT NULL OR c."prDebut" IS NULL) \n\
    AND (c."prFin" IS NOT NULL OR c."prFin" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- c."date_fin" <= '2010-01-01' \n\
    AND c."date_fin" is null;
#
# requ\u00eate 8
dikeBankStructure.title=Requ\u00eate structure talus de digue
dikeBankStructure.description=\
Informations sur les structures de talus de digue sans date de fin.\n\
D\u00e9signation et libell\u00e9 du tron\u00e7on de digue (avec la classe du syst\u00e8me d'endiguement) \n\
et pr de d\u00e9but et de fin du talus de digue.\n\
Inclut \u00e9galement les informations sur les natures, les mat\u00e9riaux et les longueurs \n\
de rampant (haut et bas), la date de d\u00e9but, le nombre de couches et le \n\
commentaire du talus de digue. \n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
les valeurs des PRs de d\u00e9but et de fin ou la date de fin, \n\
modifier les valeurs indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
dikeBankStructure.query=\
SELECT \n\
-- infos sur le talus de digue \n\
tr."designation" as numero_troncon, \n\
tr."libelle" as nom_troncon, \n\
td."prDebut", \n\
td."prFin", \n\
c."libelle" as cote, \n\
nh."libelle" as nature_haut, \n\
nb."libelle" as nature_bas, \n\
mh."libelle" as materiau_haut, \n\
mb."libelle" as materiau_bas, \n\
td."longueurRampantHaut", \n\
td."longueurRampantBas", \n\
td."date_debut", \n\
td."numCouche", \n\
td."commentaire", \n\
se."classement" as classe_digue \n\
FROM \n\
    "TalusDigue" td \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = td."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "RefCote" c ON c."id" = td."coteId" \n\
    LEFT JOIN "RefNature" nh ON nh."id" = td."natureHautId" \n\
    LEFT JOIN "RefNature" nb ON nb."id" = td."natureBasId" \n\
    LEFT JOIN "RefMateriau" mh ON mh."id" = td."materiauHautId" \n\
    LEFT JOIN "RefMateriau" mb ON mb."id" = td."materiauBasId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (td."prDebut">15000) \n\
    AND (td."prDebut" IS NOT NULL OR td."prDebut" IS NULL) \n\
    AND (td."prFin" IS NOT NULL OR td."prFin" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- td."date_fin" <= '2010-01-01' \n\
    AND td."date_fin" is null;
#
# requ\u00eate 9
summitOfRisbermeStructure.title=Requ\u00eate structure sommet de risberme
summitOfRisbermeStructure.description=\
Informations sur les structures de sommets de risberme sans date de fin.\n\
D\u00e9signation et libell\u00e9 du tron\u00e7on de digue (avec la classe du syst\u00e8me d'endiguement) \n\
et pr de d\u00e9but et de fin du sommet de risberme.\n\
Inclut \u00e9galement le c\u00f4t\u00e9, la nature, le mat\u00e9riau, la date de d\u00e9but, \n\
le nombre de couches et le commentaire du sommet de risberme. \n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
les valeurs des PRs de d\u00e9but et de fin ou la date de fin, modifier les valeurs \n\
indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
summitOfRisbermeStructure.query=\
SELECT \n\
-- infos sur le sommet de risberme \n\
tr."designation" as numero_troncon, \n\
tr."libelle" as nom_troncon, \n\
sr."prDebut", \n\
sr."prFin", \n\
c."libelle" as cote, \n\
n."libelle" as nature, \n\
m."libelle" as materiau, \n\
sr."date_debut", \n\
sr."numCouche", \n\
sr."commentaire", \n\
se."classement" as classe_digue \n\
FROM \n\
    "SommetRisberme" sr \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = sr."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "RefCote" c ON c."id" = sr."coteId" \n\
    LEFT JOIN "RefNature" n ON n."id" = sr."natureId" \n\
    LEFT JOIN "RefMateriau" m ON m."id" = sr."materiauId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (sr."prDebut">15000) \n\
    AND (sr."prDebut" IS NOT NULL OR sr."prDebut" IS NULL) \n\
    AND (sr."prFin" IS NOT NULL OR sr."prFin" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- sr."date_fin" <= '2010-01-01' \n\
    AND sr."date_fin" is null;
#
# requete 10
risbermeEmbankmentStructure.title=Requ\u00eate structure talus de risberme
risbermeEmbankmentStructure.description=\
Informations sur les structures de talus de risberme sans date de fin.\n\
D\u00e9signation et libell\u00e9 du tron\u00e7on de digue (avec la classe du syst\u00e8me d'endiguement) \n\
et pr de d\u00e9but et de fin du talus de risberme.\n\
Inclut \u00e9galement le c\u00f4t\u00e9, la date de d\u00e9but, le nombre de couches et le commentaire \n\
du sommet de risberme, ainsi que les natures, mat\u00e9riaux et longueurs de rampant (haut et bas). \n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
les valeurs des PRs de d\u00e9but et de fin ou la date de fin, modifier les valeurs \n\
indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
risbermeEmbankmentStructure.query=\
SELECT \n\
-- infos sur le talus de risberme \n\
tr."designation" as numero_troncon, \n\
tr."libelle" as nom_troncon, \n\
tar."prDebut", \n\
tar."prFin", \n\
c."libelle" as cote, \n\
nh."libelle" as nature_haut, \n\
nb."libelle" as nature_bas, \n\
mh."libelle" as materiau_haut, \n\
mb."libelle" as materiau_bas, \n\
tar."longueurRampantHaut", \n\
tar."longueurRampantBas", \n\
tar."date_debut", \n\
tar."numCouche", \n\
tar."commentaire", \n\
se."classement" as classe_digue \n\
FROM \n\
    "TalusRisberme" tar \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = tar."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "RefCote" c ON c."id" = tar."coteId" \n\
    LEFT JOIN "RefNature" nh ON nh."id" = tar."natureHautId" \n\
    LEFT JOIN "RefNature" nb ON nb."id" = tar."natureBasId" \n\
    LEFT JOIN "RefMateriau" mh ON mh."id" = tar."materiauHautId" \n\
    LEFT JOIN "RefMateriau" mb ON mb."id" = tar."materiauBasId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (tar."prDebut">15000) \n\
    AND (tar."prDebut" IS NOT NULL OR tar."prDebut" IS NULL) \n\
    AND (tar."prFin" IS NOT NULL OR tar."prFin" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- tar."date_fin" <= '2010-01-01' \n\
    AND tar."date_fin" is null;
#
# requ\u00eate 11
footOfDike.title=Requ\u00eate structure pied de digue
footOfDike.description=\
Informations sur les structures de pied de digue sans date de fin.\n\
D\u00e9signation et libell\u00e9 du tron\u00e7on de digue (avec la classe du syst\u00e8me d'endiguement) \n\
et pr de d\u00e9but et de fin du pied de digue.\n\
Inclut \u00e9galement le c\u00f4t\u00e9, la date de d\u00e9but et le commentaire du pied de digue, \n\
ainsi que la nature, le mat\u00e9riau et la fonction. \n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
les valeurs des PRs de d\u00e9but et de fin ou la date de fin, modifier les valeurs \n\
indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
footOfDike.query=\
SELECT \n\
-- infos sur le pied de digue \n\
tr."designation" as numero_troncon, \n\
tr."libelle" as nom_troncon, \n\
pd."prDebut", \n\
pd."prFin", \n\
c."libelle" as cote, \n\
n."libelle" as nature, \n\
m."libelle" as materiau, \n\
pd."date_debut", \n\
f."libelle" as fonction, \n\
pd."commentaire", \n\
se."classement" as classe_digue \n\
FROM \n\
    "PiedDigue" pd \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = pd."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "RefCote" c ON c."id" = pd."coteId" \n\
    LEFT JOIN "RefNature" n ON n."id" = pd."natureId" \n\
    LEFT JOIN "RefMateriau" m ON m."id" = pd."materiauId" \n\
    left join "RefFonction" f on f."id" = pd."fonctionId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (pd."prDebut">15000) \n\
    AND (pd."prDebut" IS NOT NULL OR pd."prDebut" IS NULL) \n\
    AND (pd."prFin" IS NOT NULL OR pd."prFin" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- pd."date_fin" <= '2010-01-01' \n\
    AND pd."date_fin" is null;
#
# requ\u00eate 12
telecomNetwork.title=Requ\u00eate r\u00e9seau t\u00e9l\u00e9com
telecomNetwork.description=\
Informations sur les r\u00e9seaux de t\u00e9l\u00e9communication sans date de fin.\n\
D\u00e9signation et libell\u00e9 du tron\u00e7on de digue (avec la classe du syst\u00e8me d'endiguement) \n\
et pr de d\u00e9but et de fin du r\u00e9seau de t\u00e9l\u00e9communication.\n\
Inclut \u00e9galement la date de d\u00e9but, le c\u00f4t\u00e9, la position, le type de r\u00e9seau, \n\
l'implantation, le libell\u00e9, la hauteur et le commentaire du r\u00e9seau t\u00e9l\u00e9com. \n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
les valeurs des PRs de d\u00e9but et de fin ou la date de fin, modifier les valeurs \n\
indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
telecomNetwork.query=\
SELECT \n\
-- infos sur le r\u00e9seau de t\u00e9l\u00e9communication \n\
tr."designation" as numero_troncon, \n\
tr."libelle" as nom_troncon, \n\
rt."prDebut", \n\
rt."prFin", \n\
rt."date_debut", \n\
c."libelle" as cote, \n\
p."libelle" as position, \n\
t."libelle" as type, \n\
i."libelle" as implantation, \n\
rt."libelle", \n\
rt."hauteur", \n\
rt."commentaire", \n\
se."classement" as classe_digue \n\
FROM \n\
    "ReseauTelecomEnergie" rt \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = rt."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "RefCote" c ON c."id" = rt."coteId" \n\
    LEFT JOIN "RefPosition" p ON p."id" = rt."positionId" \n\
    left join "RefReseauTelecomEnergie" t on t."id" = rt."typeReseauTelecomEnergieId" \n\
    left join "RefImplantation" i on i."id" = rt."implantationId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (rt."prDebut">15000) \n\
    AND (rt."prDebut" IS NOT NULL OR rt."prDebut" IS NULL) \n\
    AND (rt."prFin" IS NOT NULL OR rt."prFin" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- rt."date_fin" <= '2010-01-01' \n\
    AND rt."date_fin" is null;
#
# requ\u00eate 13
telecomBuilding.title=Requ\u00eate ouvrage t\u00e9l\u00e9com
telecomBuilding.description=\
Informations sur les ouvrages t\u00e9l\u00e9com sans date de fin.\n\
D\u00e9signation et libell\u00e9 du tron\u00e7on de digue (avec la classe du syst\u00e8me d'endiguement) \n\
et pr de d\u00e9but et de fin de l'ouvrage t\u00e9l\u00e9com.\n\
Inclut \u00e9galement la date de d\u00e9but, le c\u00f4t\u00e9, la position, le type d'ouvrage t\u00e9l\u00e9com, \n\
le libell\u00e9 et le commentaire de l'ouvrage t\u00e9l\u00e9com. \n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
les valeurs des PRs de d\u00e9but et de fin ou la date de fin, modifier les valeurs \n\
indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
telecomBuilding.query=\
SELECT \n\
-- infos sur l'ouvrage t\u00e9l\u00e9com \n\
tr."designation" as numero_troncon, \n\
tr."libelle" as nom_troncon, \n\
ot."prDebut", \n\
ot."prFin", \n\
ot."date_debut", \n\
c."libelle" as cote, \n\
p."libelle" as position, \n\
t."libelle" as type, \n\
ot."libelle", \n\
ot."commentaire", \n\
se."classement" as classe_digue \n\
FROM \n\
    "OuvrageTelecomEnergie" ot \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = ot."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "RefCote" c ON c."id" = ot."coteId" \n\
    LEFT JOIN "RefPosition" p ON p."id" = ot."positionId" \n\
    left join "RefOuvrageTelecomEnergie" t on t."id" = ot."typeOuvrageTelecomEnergieId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (ot."prDebut">15000) \n\
    AND (ot."prDebut" IS NOT NULL OR ot."prDebut" IS NULL) \n\
    AND (ot."prFin" IS NOT NULL OR ot."prFin" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- ot."date_fin" <= '2010-01-01' \n\
    AND ot."date_fin" is null;
#
# requ\u00eate 14
particularBuilding.title=Requ\u00eate ouvrage particulier
particularBuilding.description=\
Informations sur les ouvrages particuliers sans date de fin.\n\
D\u00e9signation et libell\u00e9 du tron\u00e7on de digue (avec la classe du syst\u00e8me d'endiguement) \n\
et pr de d\u00e9but et de fin de l'ouvrage particulier.\n\
Inclut \u00e9galement la date de d\u00e9but, le c\u00f4t\u00e9, la position, le type d'ouvrage particulier, \n\
le libell\u00e9 et le commentaire de l'ouvrage particulier. \n\n\
Cette requ\u00eate exclut les ouvrages particuliers de type "\u00e9chelle limnim\u00e9trique".\n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
les valeurs des PRs de d\u00e9but et de fin ou la date de fin, modifier les valeurs \n\
indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
particularBuilding.query=\
SELECT \n\
-- infos sur l'ouvrage particulier \n\
tr."designation" as numero_troncon, \n\
tr."libelle" as nom_troncon, \n\
op."prDebut", \n\
op."prFin", \n\
op."date_debut", \n\
c."libelle" as cote, \n\
p."libelle" as position, \n\
t."libelle" as type, \n\
op."libelle", \n\
op."commentaire", \n\
se."classement" as classe_digue \n\
FROM \n\
    "OuvrageParticulier" op \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = op."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "RefCote" c ON c."id" = op."coteId" \n\
    LEFT JOIN "RefPosition" p ON p."id" = op."positionId" \n\
    left join "RefOuvrageParticulier" t on t."id" = op."typeOuvrageParticulierId" \n\
    WHERE \n\
    -- exclusion des ouvrages particuliers de type "\u00e9chelle limnim\u00e9trique"\n\
    op."typeOuvrageParticulierId" not like 'RefOuvrageParticulier:5' \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    AND (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (op."prDebut">15000) \n\
    AND (op."prDebut" IS NOT NULL OR op."prDebut" IS NULL) \n\
    AND (op."prFin" IS NOT NULL OR op."prFin" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- op."date_fin" <= '2010-01-01' \n\
    AND op."date_fin" is null;
#
# requ\u00eate 14 bis
streamGauge.title=Requ\u00eate \u00e9chelle limnim\u00e9trique
streamGauge.description=\
Informations sur les \u00e9chelles limnim\u00e9triques sans date de fin.\n\n\
Les \u00e9chelles limnim\u00e9triques retourn\u00e9es par cette requ\u00eate sont de deux sortes : \n\
- les ouvrages particuliers de type \u00e9chelle limnim\u00e9trique (RefOuvrageParticulier:5)\n\
- les objets \u00e9chelle limnim\u00e9trique\n\
La premi\u00e8re colonne "type_objet" permet de distinguer les enregistrements des deux sortes. \n\n\
D\u00e9signation et libell\u00e9 du tron\u00e7on de digue (avec la classe du syst\u00e8me d'endiguement) \n\
et pr de d\u00e9but et de fin de l'\u00e9chelle limnim\u00e9trique.\n\
Inclut \u00e9galement la date de d\u00e9but, le c\u00f4t\u00e9, la position, le libell\u00e9 et le \n\
commentaire de l'\u00e9chelle limnim\u00e9trique. \n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
les valeurs des PRs de d\u00e9but et de fin ou la date de fin, modifier les valeurs \n\
indiqu\u00e9es dans la clause WHERE en cons\u00e9quence. \n\n\
Afin de pr\u00e9server une requ\u00eate plus lisible et plus souple, ces contitions de \n\
s\u00e9lection relationnelle ont \u00e9t\u00e9 pr\u00e9serv\u00e9s sur chacune des deux parties de la \n\
requ\u00eate qui restent ainsi quasi autonomes pour n'\u00eatre r\u00e9unies qu'en fin d'op\u00e9ration.\n\
Il est donc possible de s\u00e9lectionner avec des conditions diff\u00e9rentes les \u00e9chelles \n\
limnim\u00e9triques en tant que telles et celles consid\u00e9r\u00e9es comme des ouvrages particuliers.\n\
La contrepartie en est la n\u00e9cessit\u00e9 de modifier deux clauses WHERE m\u00eame si les \n\
conditions de s\u00e9lections sont souhait\u00e9es identiques pour les deux types d'objets.
streamGauge.query=\
-- premi\u00e8re partie : les ouvrages particuliers de type "\u00e9chelle limnim\u00e9trique"\n\
SELECT \n\
-- infos sur l'ouvrage particulier \n\
'ouvrage particulier' as type_objet, \n\
tr."designation" as numero_troncon, \n\
tr."libelle" as nom_troncon, \n\
op."prDebut", \n\
op."prFin", \n\
op."date_debut", \n\
c."libelle" as cote, \n\
p."libelle" as position, \n\
op."libelle", \n\
op."commentaire", \n\
se."classement" as classe_digue \n\
FROM \n\
    "OuvrageParticulier" op \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = op."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "RefCote" c ON c."id" = op."coteId" \n\
    LEFT JOIN "RefPosition" p ON p."id" = op."positionId" \n\
    WHERE \n\
    -- on s\u00e9lectionne uniquement les ouvrages particuliers de type "\u00e9chelle limnimetrique" \n\
    op."typeOuvrageParticulierId" like 'RefOuvrageParticulier:5' \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    and (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (op."prDebut">15000) \n\
    AND (op."prDebut" IS NOT NULL OR op."prDebut" IS NULL) \n\
    AND (op."prFin" IS NOT NULL OR op."prFin" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- op."date_fin" <= '2010-01-01' \n\
    AND op."date_fin" is null \n\n\
\
-- union des ouvrages particulier de type "\u00e9chelle limnim\u00e9trique et des \n\
-- \u00e9chelles limnim\u00e9triques en tant qu'objets. \n\
union \n\n\
\
-- seconde partie : les \u00e9chelles limnim\u00e9triques en tant qu'objet \n\
SELECT \n\
-- infos sur l'\u00e9chelle limnim\u00e9trique \n\
'\u00e9chelle limnim\u00e9trique' as type_objet, \n\
tr."designation" as numero_troncon, \n\
tr."libelle" as nom_troncon, \n\
el."prDebut", \n\
el."prFin", \n\
el."date_debut", \n\
c."libelle" as cote, \n\
p."libelle" as position, \n\
el."libelle", \n\
el."commentaire", \n\
se."classement" as classe_digue \n\
FROM \n\
    "EchelleLimnimetrique" el \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = el."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "RefCote" c ON c."id" = el."coteId" \n\
    LEFT JOIN "RefPosition" p ON p."id" = el."positionId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE  (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (el."prDebut">15000) \n\
    AND (el."prDebut" IS NOT NULL OR el."prDebut" IS NULL) \n\
    AND (el."prFin" IS NOT NULL OR el."prFin" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- el."date_fin" <= '2010-01-01' \n\
    AND el."date_fin" is null
#
# requ\u00eate 15
pompingStation.title=Requ\u00eate station de pompage
pompingStation.description=\
Informations sur les stations de pompage sans date de fin.\n\
D\u00e9signation et libell\u00e9 du tron\u00e7on de digue (avec la classe du syst\u00e8me d'endiguement) \n\
et pr de d\u00e9but et de fin de la station de pompage.\n\
Inclut \u00e9galement la date de d\u00e9but, le c\u00f4t\u00e9, la position, le libell\u00e9 et \n\
le commentaire de l'ouvrage particulier. \n\n\
Cette requ\u00eate exclut les ouvrages particuliers de type "\u00e9chelle limnim\u00e9trique".\n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
les valeurs des PRs de d\u00e9but et de fin ou la date de fin, modifier les valeurs \n\
indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
pompingStation.query=\
SELECT \n\
-- infos sur la station de pompage \n\
tr."designation" as numero_troncon, \n\
tr."libelle" as nom_troncon, \n\
sp."prDebut", \n\
sp."prFin", \n\
sp."date_debut", \n\
c."libelle" as cote, \n\
p."libelle" as position, \n\
sp."libelle", \n\
sp."commentaire", \n\
se."classement" as classe_digue \n\
FROM \n\
    "StationPompage" sp \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = sp."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "RefCote" c ON c."id" = sp."coteId" \n\
    LEFT JOIN "RefPosition" p ON p."id" = sp."positionId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (sp."prDebut">15000) \n\
    AND (sp."prDebut" IS NOT NULL OR sp."prDebut" IS NULL) \n\
    AND (sp."prFin" IS NOT NULL OR sp."prFin" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- sp."date_fin" <= '2010-01-01' \n\
    AND sp."date_fin" is null
#
# requ\u00eate 16
closedHydrolicNetwork.title=R\u00e9seaux hydrauliques ferm\u00e9s
closedHydrolicNetwork.description=\
Informations sur les r\u00e9seaux hydrauliques ferm\u00e9s sans date de fin.\n\
D\u00e9signation et libell\u00e9 du tron\u00e7on de digue (avec la classe du syst\u00e8me d'endiguement) \n\
et pr de d\u00e9but et de fin du r\u00e9seau hydraulique ferm\u00e9.\n\
Inclut \u00e9galement la date de d\u00e9but, le c\u00f4t\u00e9, la position, le libell\u00e9, le diam\u00e8tre, \n\
l'\u00e9coulenent, l'implantation, l'utilisation de la conduite, l'\u00e9tat d'autorisation \n\
et le commentaire du r\u00e9seau hydraulique ferm\u00e9. \n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
les valeurs des PRs de d\u00e9but et de fin ou la date de fin, modifier les valeurs \n\
indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
closedHydrolicNetwork.query=\
SELECT \n\
-- infos sur le r\u00e9seau hydraulique ferm\u00e9 \n\
tr."designation" as numero_troncon, \n\
tr."libelle" as nom_troncon, \n\
rhf."prDebut", \n\
rhf."prFin", \n\
rhf."date_debut", \n\
c."libelle" as cote, \n\
p."libelle" as position, \n\
rhf."libelle", \n\
rhf."diametre", \n\
e."libelle" as ecoulement, \n\
i."libelle" as implantation, \n\
u."libelle" as utilisation, \n\
rhf."autorise", \n\
rhf."commentaire", \n\
se."classement" as classe_digue \n\
FROM \n\
    "ReseauHydrauliqueFerme" rhf \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = rhf."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "RefCote" c ON c."id" = rhf."coteId" \n\
    LEFT JOIN "RefPosition" p ON p."id" = rhf."positionId" \n\
    left join "RefEcoulement" e on e."id" = rhf."ecoulementId" \n\
    left join "RefImplantation" i on i."id" = rhf."implantationId" \n\
    left join "RefUtilisationConduite" u on u."id" = rhf."utilisationConduiteId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (rhf."prDebut">15000) \n\
    AND (rhf."prDebut" IS NOT NULL OR rhf."prDebut" IS NULL) \n\
    AND (rhf."prFin" IS NOT NULL OR rhf."prFin" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- rhf."date_fin" <= '2010-01-01' \n\
    AND rhf."date_fin" is null
#
# requ\u00eate 17
hydrolicAssociatedBuilding.title=Ouvrage hydraulique associ\u00e9
hydrolicAssociatedBuilding.description=\
Informations sur les ouvrages hydrauliques associ\u00e9s sans date de fin.\n\
D\u00e9signation et libell\u00e9 du tron\u00e7on de digue (avec la classe du syst\u00e8me d'endiguement) \n\
et pr de d\u00e9but et de fin du r\u00e9seau hydraulique ferm\u00e9.\n\
Inclut \u00e9galement la date de d\u00e9but, le c\u00f4t\u00e9, la position, le libell\u00e9, le diam\u00e8tre, \n\
l'\u00e9coulenent, l'implantation, l'utilisation de la conduite, l'\u00e9tat d'autorisation \n\
et le commentaire du r\u00e9seau hydraulique ferm\u00e9. \n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
les valeurs des PRs de d\u00e9but et de fin ou la date de fin, modifier les valeurs \n\
indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
hydrolicAssociatedBuilding.query=\
SELECT \n\
-- infos sur l'ouvrage hydraulique associ\u00e9 \n\
tr."designation" as numero_troncon, \n\
tr."libelle" as nom_troncon, \n\
oha."prDebut", \n\
oha."prFin", \n\
oha."date_debut", \n\
c."libelle" as cote, \n\
p."libelle" as position, \n\
t."libelle" as type, \n\
oha."libelle", \n\
oha."commentaire", \n\
se."classement" as classe_digue \n\
FROM \n\
    "OuvrageHydrauliqueAssocie" oha \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = oha."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "RefCote" c ON c."id" = oha."coteId" \n\
    LEFT JOIN "RefPosition" p ON p."id" = oha."positionId" \n\
    left join "RefOuvrageHydrauliqueAssocie" t on t."id" = oha."typeOuvrageHydroAssocieId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (oha."prDebut">15000) \n\
    AND (oha."prDebut" IS NOT NULL OR oha."prDebut" IS NULL) \n\
    AND (oha."prFin" IS NOT NULL OR oha."prFin" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- oha."date_fin" <= '2010-01-01' \n\
    AND oha."date_fin" is null
#
# requ\u00eate 18
openAirHydrolicNetwork.title=R\u00e9seau hydraulique \u00e0 ciel ouvert
openAirHydrolicNetwork.description=\
Informations sur les r\u00e9seaux hydrauliques \u00e0 ciel ouvert sans date de fin.\n\
D\u00e9signation et libell\u00e9 du tron\u00e7on de digue (avec la classe du syst\u00e8me d'endiguement) \n\
et pr de d\u00e9but et de fin du r\u00e9seau hydraulique \u00e0 ciel ouvert.\n\
Inclut \u00e9galement la date de d\u00e9but, le c\u00f4t\u00e9, la position, le type de r\u00e9seau, \n\
le libell\u00e9, et le commentaire du r\u00e9seau hydraulique ferm\u00e9. \n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
les valeurs des PRs de d\u00e9but et de fin ou la date de fin, modifier les valeurs \n\
indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
openAirHydrolicNetwork.query=\
SELECT \n\
-- infos sur le r\u00e9seau hydraulique \u00e0 ciel ouvert \n\
tr."designation" as numero_troncon, \n\
tr."libelle" as nom_troncon, \n\
rhco."prDebut", \n\
rhco."prFin", \n\
rhco."date_debut", \n\
c."libelle" as cote, \n\
p."libelle" as position, \n\
t."libelle" as type, \n\
rhco."libelle", \n\
rhco."commentaire", \n\
se."classement" as classe_digue \n\
FROM \n\
    "ReseauHydrauliqueCielOuvert" rhco \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = rhco."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    LEFT JOIN "RefCote" c ON c."id" = rhco."coteId" \n\
    LEFT JOIN "RefPosition" p ON p."id" = rhco."positionId" \n\
    left join "RefReseauHydroCielOuvert" t on t."id" = rhco."typeReseauHydroCielOuvertId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" IS NOT NULL OR tr."designation" IS NULL) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (rhco."prDebut">15000) \n\
    AND (rhco."prDebut" IS NOT NULL OR rhco."prDebut" IS NULL) \n\
    AND (rhco."prFin" IS NOT NULL OR rhco."prFin" IS NULL) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- rhco."date_fin" <= '2010-01-01' \n\
    AND rhco."date_fin" is null
#
# requ\u00eate 19
disorderQuery.title=Requ\u00eate d\u00e9sordre
disorderQuery.description=\
Informations sur les d\u00e9sordres sans date de fin.\n\
D\u00e9signation et libell\u00e9 du tron\u00e7on de digue (avec la classe du syst\u00e8me d'endiguement) \n\
et pr de d\u00e9but et de fin du d\u00e9sordre.\n\
Inclut \u00e9galement le type de d\u00e9sordre, le c\u00f4t\u00e9, la position, et le commentaire du \n\
d\u00e9sordre et celui de sa derni\u00e8re observation (l'\u00e9volution) accompagn\u00e9 de l'abr\u00e9g\u00e9 \n\
de l'urgence. \n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
les valeurs des PRs de d\u00e9but et de fin ou la date de fin, modifier les valeurs \n\
indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
disorderQuery.query=\
SELECT \n\
-- infos sur le tron\u00e7on \n\
tr."designation" as code_troncon, \n\
tr."libelle" as nom_troncon, \n\
d."prDebut", \n\
d."prFin", \n\
type_d."libelle" as nom_type, \n\
c."libelle" as cote, \n\
p."libelle" as position, \n\
d."date_debut", \n\
d."commentaire", \n\
u."abrege" as code_urgence, \n\
-- infos sur la derni\u00e8re observation \n\
o."evolution" as commentaire_derniere_observation, \n\
se."classement" \n\
FROM \n\
    "Desordre" d \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = d."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    -- infos sur les d\u00e9sordres \n\
    LEFT JOIN "RefTypeDesordre" type_d ON type_d."id" = d."typeDesordreId" \n\
    LEFT JOIN "RefCote" c ON c."id" = d."coteId" \n\
    LEFT JOIN "RefPosition" p ON p."id" = d."positionId" \n\
    LEFT JOIN \n\
        -- On r\u00e9cup\u00e8re les observations pour chaque d\u00e9sordre choisi. \n\
        (SELECT "designation", "evolution", "parent_id", "urgenceId" FROM "Observation" \n\
            INNER JOIN \n\
                -- Observations \u00e0 la date la plus r\u00e9cente pour chaque d\u00e9sordre \n\
                (SELECT "parent_id" as tmp_pid, MAX("date") as max_date from "Observation" GROUP BY "parent_id") o0 \n\
            ON "parent_id" = o0.tmp_pid and "date" = o0.max_date \n\
        ) o ON o."parent_id" = d."id" \n\
    -- urgence of the returned observations \n\
    LEFT JOIN "RefUrgence" u ON u."id" = o."urgenceId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" is null or tr."designation" is not null) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (d."prDebut">15000) \n\
    and (d."prDebut" is null or d."prDebut" is not null) \n\
    and (d."prFin" is null or d."prFin" is not null) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- d."date_fin" <= '2010-01-01' \n\
    and d."date_fin" IS NULL;
#
# requ\u00eate 20
accessRoad.title=Requ\u00eate voie d'acc\u00e8s
accessRoad.description=\
Informations sur les voies d'acc\u00e8s sans date de fin.\n\
D\u00e9signation et libell\u00e9 du tron\u00e7on de digue (avec la classe du syst\u00e8me d'endiguement) \n\
et pr de d\u00e9but et de fin de la voie d'acc\u00e8s.\n\
Inclut \u00e9galement le c\u00f4t\u00e9, la position, le libell\u00e9, la largeur, le num\u00e9ro de secteur, \n\
le mat\u00e9riau, l'usage et le commentaire de la voie d'acc\u00e8s. \n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
les valeurs des PRs de d\u00e9but et de fin ou la date de fin, modifier les valeurs \n\
indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
accessRoad.query=\
SELECT \n\
-- infos sur le tron\u00e7on \n\
tr."designation" as code_troncon, \n\
tr."libelle" as nom_troncon, \n\
va."prDebut", \n\
va."prFin", \n\
va."date_debut", \n\
c."libelle" as cote, \n\
p."libelle" as position, \n\
va."libelle", \n\
va."largeur", \n\
va."numeroSecteur", \n\
m."libelle" as materiau, \n\
u."libelle" as usage, \n\
va."commentaire", \n\
se."classement" \n\
FROM \n\
    "VoieAcces" va \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = va."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    -- infos sur les d\u00e9sordres \n\
    LEFT JOIN "RefMateriau" m ON m."id" = va."materiauId" \n\
    LEFT JOIN "RefUsageVoie" u ON u."id" = va."usageId" \n\
    LEFT JOIN "RefCote" c ON c."id" = va."coteId" \n\
    LEFT JOIN "RefPosition" p ON p."id" = va."positionId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" is null or tr."designation" is not null) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (va."prDebut">15000) \n\
    and (va."prDebut" is null or va."prDebut" is not null) \n\
    and (va."prFin" is null or va."prFin" is not null) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- va."date_fin" <= '2010-01-01' \n\
    and va."date_fin" IS NULL;
#
# requ\u00eate 21
crossingStructure.title=Requ\u00eate ouvrage de franchissement
crossingStructure.description=\
Informations sur les ouvrages de franchissement sans date de fin.\n\
D\u00e9signation et libell\u00e9 du tron\u00e7on de digue (avec la classe du syst\u00e8me d'endiguement) \n\
et pr de d\u00e9but et de fin de l'ouvrage de franchissement.\n\
Inclut \u00e9galement le c\u00f4t\u00e9, le type d'ouvrage de franchissement, le libell\u00e9, la largeur, \n\
les position et rev\u00eatement haut et bas, l'orientation, l'usage et le commentaire \n\
de l'ouvrage de franchissement. \n\n\
Pour poser des conditions ou s\u00e9lectionner un ou plusieurs tron\u00e7ons particuliers, \n\
les valeurs des PRs de d\u00e9but et de fin ou la date de fin, modifier les valeurs \n\
indiqu\u00e9es dans la clause WHERE en cons\u00e9quence.
crossingStructure.query=\
SELECT \n\
-- infos sur le tron\u00e7on \n\
tr."designation" as code_troncon, \n\
tr."libelle" as nom_troncon, \n\
ofr."prDebut", \n\
ofr."prFin", \n\
ofr."date_debut", \n\
c."libelle" as cote, \n\
t."libelle" as type, \n\
ofr."libelle", \n\
ofr."largeur", \n\
ph."libelle" as position_haut, \n\
pb."libelle" as position_bas, \n\
rh."libelle" as revetement_haut, \n\
rb."libelle" as revetement_bas, \n\
o."libelle" as orientation_ouvrage, \n\
u."libelle" as usage, \n\
ofr."commentaire", \n\
se."classement" \n\
FROM \n\
    "OuvrageFranchissement" ofr \n\
    -- Tron\u00e7ons affect\u00e9s \n\
    LEFT JOIN "TronconDigue" tr ON tr."id" = ofr."linearId" \n\
    LEFT JOIN "Digue" dig ON dig."id" = tr."digueId" \n\
    LEFT JOIN "SystemeEndiguement" se ON se."id" = dig."systemeEndiguementId" \n\
    -- infos sur les ouvrages de franchissement \n\
    LEFT JOIN "RefOuvrageFranchissement" t ON t."id" = ofr."typeOuvrageFranchissementId" \n\
    LEFT JOIN "RefUsageVoie" u ON u."id" = ofr."usageId" \n\
    LEFT JOIN "RefCote" c ON c."id" = ofr."coteId" \n\
    LEFT JOIN "RefPosition" ph ON ph."id" = ofr."positionHautId" \n\
    LEFT JOIN "RefPosition" pb ON pb."id" = ofr."positionBasId" \n\
    LEFT JOIN "RefRevetement" rh ON rh."id" = ofr."revetementHautId" \n\
    LEFT JOIN "RefRevetement" rb ON rb."id" = ofr."revetementBasId" \n\
    left join "RefOrientationOuvrage" o on o."id" = ofr."orientationOuvrageId" \n\
    -- exemple de param\u00e9trage de ton\u00e7on : \n\
    -- (tr."designation" like '23' or tr."designation" like '24') \n\
    WHERE (tr."designation" is null or tr."designation" is not null) \n\
    -- exemple de param\u00e9trage du Pr de d\u00e9but \n\
    -- (ofr."prDebut">15000) \n\
    and (ofr."prDebut" is null or ofr."prDebut" is not null) \n\
    and (ofr."prFin" is null or ofr."prFin" is not null) \n\
    -- exemple de param\u00e9trage de la date de fin \n\
    -- ofr."date_fin" <= '2010-01-01' \n\
    and ofr."date_fin" IS NULL;

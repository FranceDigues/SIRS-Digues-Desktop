<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>fr.symadrem.sirs.core</groupId>
  <artifactId>sirs-core-store</artifactId>

  <parent>
    <groupId>fr.symadrem.sirs</groupId>
    <artifactId>core</artifactId>
    <version>1.x-SNAPSHOT</version>
  </parent>

  <properties>
    <spring.version>4.0.5.RELEASE</spring.version>
    <liquidbase.version>3.2.0</liquidbase.version>
  </properties>


  <dependencies>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>


    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
      <version>${liquidbase.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
      <version>3.3.2</version>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-meta</artifactId>
      <version>3.3.2</version>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-codegen</artifactId>
      <version>3.3.2</version>
    </dependency>


    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.180</version>
    </dependency>
  </dependencies>


  <build>
    <plugins>
      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <configuration>
              <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
              <changeLogFile>src/main/resources/fr/symadrem/sirs/db/db-changelog.xml</changeLogFile>
              <driver>org.h2.Driver</driver>
              <url>jdbc:h2:${basedir}/target/db</url>
            </configuration>
            <goals>
              <goal>update</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <!-- http://maven.apache.org/plugins/maven-compiler-plugin/ -->
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.geomatys.maven</groupId>
        <artifactId>geomatys-sqlpojo-plugin</artifactId>
        <version>0.0.3-SNAPSHOT</version>
        <dependencies>
          <dependency>
            <groupId>fr.sym</groupId>
            <artifactId>desktop</artifactId>
            <version>1.x-SNAPSHOT</version>
          </dependency>
          <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.180</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>sqlpojo</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <jdbcURL>jdbc:h2:${basedir}/target/db</jdbcURL>
              <targetPackage>fr.symadrem.sirs.model</targetPackage>
              <targetSchema>PUBLIC</targetSchema>
<!--               <changeLog>fr/sym/db/db-changelog.xml</changeLog> -->
              <notifier>true</notifier>
              <fluentSetter>false</fluentSetter>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>

        <!-- Specify the maven code generator plugin -->
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>3.3.2</version>

        <!-- The plugin should hook into the generate goal -->
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>

        <!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL database -->
        <dependencies>
          <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.180</version>
          </dependency>
        </dependencies>

        <!-- Specify the plugin configuration. The configuration format is the same as for the standalone code generator -->
        <configuration>

          <!-- JDBC connection parameters -->
          <jdbc>
            <driver>org.h2.Driver</driver>
            <url>jdbc:h2:${basedir}/target/db</url>
<!--             <url>jdbc:h2:mem:db</url> -->
          </jdbc>


          <!-- Generator parameters -->
          <generator>


            <name>org.jooq.util.DefaultGenerator</name>
            <database>
              <name>org.jooq.util.h2.H2Database</name>
              <includes>.*</includes>
              <excludes></excludes>
<!--               <inputSchema>ADMIN</inputSchema> -->
              <customTypes>
                <customType>
      <!-- Specify the fully-qualified class name of your custom type -->
                  <name>java.util.Calendar</name>

      <!-- Associate that custom type with your converter. Note, a
           custom type can only have one converter in jOOQ -->
                  <converter>com.geomatys.jooq.converter.CalendarConverter</converter>
                </customType>
              </customTypes>

  <!-- Then, associate custom types with database columns -->
              <forcedTypes>
                <forcedType>
      <!-- Specify again he fully-qualified class name of your custom type -->
                  <name>java.util.Calendar</name>

      <!-- Add a list of comma-separated regular expressions matching columns -->
                  <types>TIMESTAMP</types>
                </forcedType>
              </forcedTypes>

            </database>
<!--             <generate> -->
<!--               <pojos>true</pojos> -->
<!--               <daos>true</daos> -->
<!--             </generate> -->
            <target>
              <packageName>org.constellation.engine.register.jooq</packageName>
              <directory>target/generated-sources/jooq</directory>
            </target>
          </generator>
        </configuration>
      </plugin>

    </plugins>
  </build>

</project>
